<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lectureMapper">
  	<resultMap id="lectureResult" type="Lecture">
  		<result column="class_no" property="classNo"/>
  		<result column="class_title" property="classTitle"/>
  		<result column="create_date" property="createDate"/>
  		<result column="thumbnail" property="thumbnail"/>
  		<result column="intro_file" property="introFile"/>
  		<result column="intro_title" property="introTitle"/>
  		<result column="intro_content" property="introContent"/>
  		<result column="status" property="status"/>
  		<result column="period" property="period"/>
  		<result column="need" property="need"/>
  		<result column="note" property="note"/>
  		<result column="pos_term" property="posTerm"/>
  		<result column="price" property="price"/>
  		<result column="subcat_no" property="subcatNo"/>
  		<result column="user_no" property="userNo"/>
		<result column="count" property="fundingCount"/>
		<result column="nickname" property="teacherName"/>
		<result column="subcat_name" property="subCat"/>
		<result column="maincat_name" property="mainCat"/>
		<result column="scrap" property="scrapCount"/>
		<result column="students" property="students"/>  	
		<result column="star" property="star"/>
		<result column="surveyCount" property="surveyCount"/>
	</resultMap>
  	
  	<resultMap id="studingResult" type="Studing">
		<result column="user_no" property="userNo"/>
		<result column="class_no" property="classNo"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="video_no" property="videoNo"/>
	</resultMap>
	
	<resultMap type="ScrapSupport" id="scrapResult">
		<result column="user_no" property="userNo"/>
		<result column="class_no" property="classNo"/>
		<result column="type" property="type"/>
		<result column="scrap_date" property="scrapDate"/>
	</resultMap>
	
	<resultMap type="ClassIntro" id="introResult">
		<result column="intro_order" property="introOrder"/>
		<result column="Class_no" property="classNo"/>
		<result column="intro_image" property="introImage"/>
		<result column="intro_content" property="introContent"/>
	</resultMap> 
	
	<resultMap id="classVideoResult" type="ClassVideo">
		<result column="video_no" property="videoNo"/>
		<result column="class_no" property="classNo"/>
		<result column="chap_order" property="chapOrder"/>
		<result column="video_order" property="videoOrder"/>
		<result column="sub_title" property="subTitle"/>
		<result column="origin_name" property="originName"/>
		<result column="change_name" property="changeName"/>
	</resultMap>
	
	<resultMap id="chapterResult" type="Chapter">
		<result column="chap_order" property="chapOrder"/>
		<result column="class_no" property="classNo"/>
		<result column="chap_name" property="chapName"/>
	</resultMap>
	
	<resultMap id="chapterResult2" type="Chapter">
		<result column="chap_order" property="chapOrder"/>
		<result column="class_no" property="classNo"/>
		<result column="chap_name" property="chapName"/>
		<collection column="class_no" property="classVideoList" javaType="java.util.ArrayList"
			    	ofType="ClassVideo" select="selectLectureVideo"/>
	</resultMap>
	
	<resultMap type="Survey" id="surveyResult">
		<result column="survey_no" property="surveyNo"/>
		<result column="nickname" property="userNo"/>
		<result column="quality" property="quality"/
		<result column="satisfaction" property="satisfaction"/>
		<result column="difficulty" property="difficulty"/>
		<result column="price" property="price"/>
		<result column="score" property="score"/>
		<result column="review" property="review"/>
		<result column="create_date" property="createDate"/>
		<result column="class_no" property="classNo"/>
		<result column="teacher_no" property="teacherNo"/>
	</resultMap>
	
	<resultMap type="ClassInquiry" id="inquiryResult">
		<result column="inquiry_no" property="inquiryNo"/>
		<result column="inq_content" property="inqContent"/>
		<result column="inq_date" property="inqDate"/>
		<result column="ans_content" property="ansContent"/>
		<result column="ans_date" property="ansDate"/>
		<result column="class_no" property="classNo"/>
		<result column="user_no" property="userNo"/>
		<result column="teacher_no" property="teacherNo"/>
		<result column="tea_no" property="teaNo"/>
		<result column="class_title" property="classTitle"/>
		<result column="profile_image" property="teacherImage"/>
	</resultMap>
  	
  	<!-- 
  		@author HeeRak
  		월별정산_ 한 강사의 모든 클래스번호, 이름 조회 
  	-->
  	<select id="selectTeacherClassAll" resultMap="lectureResult">
  		select
  			   class_no
  			 , class_title
  		  from lecture
  		 where user_no = #{userNo}
  		   and status = 'O'
  		 order
  		    by create_date asc
  	</select>
  	
  	<!-- 
		@author yeji lee
		찜하기 중복 체크
	 -->
	<select id="scrapCheck" parameterType="map" resultType="_int">
		select
			   count(*)
		  from scrap_support
		 where 
		 	   user_no = #{userNo}
		   and 
		       class_no = #{classNo}
		   and 
		       type = 'S'
	</select>
	
	<!-- 
		@author: yeji lee
		찜하기 
	 -->
	<insert id="ajaxScrapLecture" parameterType="map">
		insert
		  into 
		  	   scrap_support
		values 
			   (
				 ${userNo}
			   , ${classNo}
			   , 'S'
			   , SYSDATE
			   )
	</insert>
  	
  	<!-- 
		@author leeyeji
		펀딩 클래스 페이징	
	 -->
	 <select id="selectFundingCount" resultType="_int">
	 	select
	 		   count(*)
	 	  from class_funding 
	 </select>
	
	<!-- 
		@author leeyeji
		펀딩 클래스 조회용
	 -->
	<select id="selectFundingList" resultMap="lectureResult">
		select 
               class_no
             , thumbnail
             , class_title
             , create_date
             , f.count
             , t.nickname
          from lecture l
          join class_funding f using(class_no)
          join teacher t on(l.user_no = t.teacher_no)
         where l.status = 'F'
         order 
            by create_date desc
	</select>
	
	<!-- 
		@author leeyeji
		펀딩 클래스 상세 조회용
	 -->
	 <select id="selectFundingDetail" resultMap="lectureResult">
	 	select
               class_no
             , class_title
             , intro_file
             , intro_content
             , count
             , subcat_name
             , maincat_name
          from lecture 
          join class_funding using(class_no)
          join subcat using(subcat_no)
          join maincat using(maincat_no)
         where status = 'F'
           and class_no = #{classNo}
	 </select> 
	  
	 <!-- 
	 	@author leeyeji
	 	펀딩 클래스 응원하기
	  -->
	 <insert id="ajaxSupportLecture" parameterType="map">
	 	insert
		  into 
		  	   scrap_support
		values 
			   (
				 ${userNo}
			   , ${classNo}
			   , 'C'
			   , SYSDATE
			   )
	 </insert>
	
	<!-- 
		@author : yeji Lee
		페이징 처리
	 -->
	<select id="selectListCount" resultType="_int">
		select
		 	   count(*)
		  from lecture
		 where status = 'O' 
	</select>
	
	<!-- 
		@author : yeji Lee
		클래스 리스트 조회
	 -->
	<select id="selectLectureList" resultMap="lectureResult">
		select
		       l.class_no
		     , l.class_title
		     , l.create_date
		     , l.thumbnail
		     , l.price
		     , (select 
		               round(avg(score))
		          from survey
		         where class_no = l.class_no) star
		     , (select
		               count(*)
		          from scrap_support
		         where type = 'S'
		           and class_no = l.class_no) scrap
		     , (select
		               count(*)
		          from payment
		         where class_no = l.class_no) students
		     , t.nickname
		  from lecture l
		  left outer join (
		                    select 
		                           teacher_no, nickname
		                      from teacher
		                  ) t 
		                  on l.user_no = t.teacher_no
		 where l.status = 'O'
		 order 
		 <choose>
		 	<when test="sno == 3">
		    	by students desc
		    </when>
		    <when test="sno == 2">
		    	by star desc
		    </when>
		    <otherwise>
		    	by scrap desc
		    </otherwise>
		 </choose>
	</select>
	
	<!-- 
		@author yeji lee
		클래스 상세 조회
	 -->
	<select id="selectLecture" resultMap="lectureResult">
		select
               l.class_no
             , l.class_title
             , l.pos_term
             , l.price
             , l.intro_file
             , l.intro_title
             , l.intro_content
             , l.need
             , l.note
             , l.period
             , (select 
                       round(avg(score))
                  from survey
                 where class_no = l.class_no) star
             , (select 
                       count(*)
                  from survey
                 where class_no = l.class_no) survey
             , (select
                       count(*)
                  from payment
                 where class_no = l.class_no) students
            , t.nickname nickname
          from lecture l
          join teacher t on(l.subcat_no = t.subcat_no)
         where l.class_no = #{classNo}
           and l.status = 'O'
	</select>
	
	<!-- 
		@author yeji lee
		클래스 소개 조회
	 -->
	<select id="selectLectureIntro" resultMap="introResult">
		select
               class_no
             , intro_order
             , intro_image
             , intro_content
          from class_intro 
         where class_no = #{classNo}
	</select>
	
	<!-- 
		@author yeji lee
		클래스 챕터 조회
	 -->
	<select id="selectLectureChapter" resultMap="chapterResult2">
		select 
               chap_order
             , class_no
             , chap_name
          from chapter
         where class_no = #{classNo}
	</select>
	
	<!-- 
		@author yeji lee
		클래스 챕터 조회(비디오)
	 -->
	<select id="selectLectureVideo" resultMap="classVideoResult">
		select 
               video_no
             , chap_order
             , video_order
             , sub_title
          from class_video
         where class_no = #{classNo}
         order
            by video_no asc
	</select>
	
	<!-- 
		@author yeji lee
		클래스 후기 조회
	 -->
	<select id="selectLectureReview" resultMap="surveyResult">
		select 
               s.survey_no
             , m.nickname
             , s.satisfaction
             , s.review
          from survey s
          join member m on(s.user_no = m.user_no)
         where class_no = #{userNo}
	</select>
	
	<!-- 
		@author yeji lee
		클래스 문의 조회
	 -->
	<select id="selectLectureInquiry" resultMap="inquiryResult">
		select 
               i.inquiry_no
             , i.inq_content
             , TO_CHAR(i.inq_date, 'YYYY-MM-DD HH24:MI') inq_date
             , i.ans_content
             , TO_CHAR(i.ans_date, 'YYYY-MM-DD HH24:MI') ans_date
             , m.nickname user_no
             , t.nickname teacher_no
             , t.teacher_no tea_no
             , t.profile_image
             , i.class_no
          from class_inquiry i
          left outer join (
                            select 
                                   teacher_no
                                 , nickname
                                 , profile_image
                              from teacher
                          ) t 
                         on i.teacher_no = t.teacher_no
          join member m on(m.user_no = i.user_no)
         where i.class_no = #{classNo}
	</select>
	
	<!-- 
		@author yeji lee
		클래스 문의 등록
	 -->
	<insert id="ajaxEnrollInquiry">
		insert 
		  into class_inquiry
		  (
		    inquiry_no
		  , inq_content
		  , class_no
          , user_no
          , teacher_no
		  )
		  values
		  (
		    SEQ_INO.nextval
		  , #{inqContent}
		  , #{classNo}
		  , #{userNo}
          , #{teacherNo}
		  )
	</insert>
	
	<!-- 
		@author yeji lee
		유저 스크랩 클래스 목록 조회
	 -->
	<select id="selectScrapCount" resultType="_int">
		select
		       count(*)
		  from scrap_support
         where user_no = #{userNo}
           and type = 'S'
	</select>
	
	<select id="selectScrapList" resultMap="lectureResult">
		select
	 		   l.class_no
             , l.class_title
             , t.nickname
             , l.price
             , l.create_date
             , (select 
                       round(avg(score), 1)
                  from survey
                 where class_no = l.class_no) star
             , (select
                       count(*)
                  from scrap_support
                 where type = 'S'
                   and class_no = l.class_no) scrap
         from lecture l
         join teacher t on(l.user_no = t.teacher_no)
         join scrap_support s on(l.class_no = s.class_no)
        where l.user_no = #{userNo}
          and s.type = 'S'
        order
           by scrap_date desc
	</select>
	
  	<!--
		한 강사의 '클래스 목록 수' 
		@author HeeRak
	-->
	<select id="selectLectureListCount" resultType="_int">
		select count(*)
		  from lecture
		 where status != 'D'
		   and user_no = #{userNo}
	</select>
	
	<!--
		한 강사의 '클래스 목록'
		@author HeeRak
	-->
	<select id="selectLectureByTeacher" resultMap="lectureResult">
		select 
			   class_no
			 , class_title
			 , to_char(create_date, 'YYYY-MM-DD') as create_date
			 , thumbnail
			 , status
			 , subcat_no
		  from lecture
		 where status != 'D'
		   and user_no = #{userNo}
		 order
		    by create_date desc
	</select>
	
	<!-- 
		한 클래스 '클래스 챕터 목록'
		@author HeeRak
	 -->
	<select id="selectChapterList" resultMap="chapterResult">
		select chap_order
			 , class_no
		     , chap_name
		  from chapter
		 where class_no = #{classNo}
		 order
		    by chap_order asc
	</select>
  	
  	
  	<!-- 
		한 클래스 '클래스 비디오 목록'
		@author HeeRak
	 -->
  	<select id="ajaxSelectVideoList" resultMap="classVideoResult">
		select 
		       video_no
		     , chap_order
		     , sub_title
		     , change_name
		  from class_video
		 where class_no = #{classNo}
		 order
    	    by video_no asc
	</select>
	
	<!-- 
		
	 -->
	<update id="ajaxUpdateClassStuding" parameterType="ClassStuding">
		update class_studing
		   set video_no = #{videoNo}
		 where user_no = #{userNo}
		   and class_no =  #{classNo}
	</update>
</mapper>
